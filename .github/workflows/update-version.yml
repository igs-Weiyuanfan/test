name: Update Version

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  update-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # 確保有寫入權限

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Determine version bump
      id: version-bump
      run: |
        # 讀取當前版本號
        version=$(cat version.txt)
        echo "Current version: $version"

        # 分割版本號
        IFS='.' read -r -a version_parts <<< "$version"
        major=${version_parts[0]}
        minor=${version_parts[1]}
        patch=${version_parts[2]}

        # 根據 PR 標籤決定版本號的更新部分
        labels=$(jq -r '.pull_request.labels | map(.name) | join(" ")' <<< "${{ toJson(github.event) }}")
        echo "PR Labels: $labels"

        # 初始化標籤變數
        is_major=false
        is_minor=false
        is_patch=false

        # 檢查標籤
        for label in $labels; do
          echo "$label"
          if [[ "$label" == "major" ]]; then
            is_major=true
          elif [[ "$label" == "minor" ]]; then
            is_minor=true
          elif [[ "$label" == "patch" ]]; then
            is_patch=true
          fi
        done

        # 根據標籤更新版本號
        if [ "$is_major" = true ]; then
          major=$((major + 1))
          minor=0
          patch=0
        elif [ "$is_minor" = true ]; then
          minor=$((minor + 1))
          patch=0
        elif [ "$is_patch" = true ]; then
          patch=$((patch + 1))
        fi

        # 組合新的版本號
        new_version="$major.$minor.$patch"
        echo "New version: $new_version"

        # 設定輸出變數
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Update version file
      run: |
        # 更新版本號文件
        echo "${{ env.new_version }}" > version.txt

        # 設定 Git 使用者資訊
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # 提交更改
        git add version.txt
        git commit -m "Bump version to ${{ env.new_version }}"

    - name: Pull latest changes
      run: git pull --rebase origin ${{ github.head_ref }}

    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.head_ref }}